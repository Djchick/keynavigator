{"name":"Keynavigator","tagline":"Keynavigation plugin for jQuery/Zepto.","body":"\r\nKey navigaton plugin for <a href=\"http://jquery.com\">jQuery</a>/<a href=\"http://zeptojs.com\">Zepto</a>.\r\n<br/>\r\nMakes it possible to use arrow keys (or any key) for navigation in eg. `ul` or `table` elements.\r\n\r\n###Usage\r\nInclude keynavigator.js after having included jQuery or Zepto:\r\n```html\r\n<script src=\"jquery.js\"></script>\r\n<script src=\"keynavigator.js\"></script>\r\n```\r\nStart the keynavigator plugin.\r\n```javascript\r\n$(document).ready(function() {\r\n  $('ul#example li').keynavigator(/* optional settings */);\r\n});  \r\n```\r\n\r\n####RequireJS\r\nInclude <a href=\"http://requirejs.org\">RequireJS</a>.\r\n```html\r\n<script src=\"require.js\"></script>\r\n```\r\nStart the keynavigator plugin.\r\n```javascript\r\nrequire(['keynavigator'], function($) {\r\n  $('ul#example li').keynavigator(/* optional settings */);\r\n});  \r\n\r\n```\r\n####Settings\r\n```\r\n cycle: {boolean} - If true, use cycle navigation\r\n  - default: false     \r\n\r\n activeClass: {string} - The name of the class that should be used for the active element.\r\n  - default: 'active'\r\n \r\n keys: {object} (keyCode: callback): Callback functions that executes when a key is pressed.\r\n\r\n tabindex: {number} - The tabindex that should be used on the parent element.\r\n  - default: -1\r\n\r\n useCache: {boolean} - If false, run the selector on each keydown. \r\n                       Useful if elements are added/removed from the DOM.\r\n  - default: true\r\n```\r\n\r\n<strong>Custom events</strong><br/>\r\nSubscribe to ```up``` and ```down``` events using:\r\n```javascript\r\n$('ul#example li').keynavigator()\r\n                  .on('up', function(e) {\r\n                    console.log('Pressed up on', $(this));\r\n                  })\r\n                  .on('down', function(e) {\r\n                    console.log('Pressed down on', $(this));\r\n                  });\r\n```\r\n\r\n<strong>Example with callbacks</strong><br/>\r\nKey handlers and custom settings:\r\n```javascript\r\n$('ul#example li').keynavigator({\r\n  cycle: true, /* Restart from top/bottom */\r\n  useCache: false, /* Useful if elements are added/removed  */\r\n  activeClass: 'active-blue', /* Class on the active element */\r\n  keys: {\r\n    /* Callback when key 'a' is pressed */\r\n    65: function($el, e) {\r\n      // 'this' - will be the KeyNavigator instance.\r\n      // $el - the element\r\n      // e - the event\r\n      console.log('pressed \"a\" on', $el);\r\n\r\n      // Create a new element and add it to the list.\r\n      $('<li>Appended</li>').insertAfter($el);\r\n      \r\n      this.setActive();\r\n    },\r\n\r\n    /* Callback when key 'd' is pressed */\r\n    68: function($el, e) { /* Key 'd' */\r\n      // 'this' - will be the KeyNavigator instance.\r\n      // $el - the element\r\n      // e - the event      \r\n      console.log('pressed \"d\" on', $el);\r\n      \r\n      // Remove the element.\r\n      $el.remove();\r\n\r\n      this.setActive();\r\n    }\r\n  }\r\n});\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}